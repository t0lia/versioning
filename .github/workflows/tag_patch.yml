name: tag patch

on:
  push:
    branches:
      - 'main'

jobs:

  tag-patch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Increment patch version
        id: increment_patch_version
        run: |
          git fetch --tags
          git tag -l
          latestTag=$(git describe --tags `git rev-list --tags --max-count=1`)
          
          if [[ $latestTag == pre_v* ]]; then
            newTag="v${latestTag#pre_v}"
          else
            IFS='.' read -ra parts <<< "${latestTag//v/}"
            major=${parts[0]}
            minor=${parts[1]}
            patch=${parts[2]}
            patch=$((patch+1))
            newTag="v$major.$minor.$patch"
          fi
          
          echo "newTag=$newTag" >> $GITHUB_ENV

      - name: Create patch tag
        id: create_patch_tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          previousTag=$(git describe --tags `git rev-list --tags --max-count=1^`)
          releaseNotes=$(git log --pretty=format:"- %s" $previousTag..HEAD)
          echo "Release ${{ env.newTag }}:" >> release_notes.txt
          echo "$releaseNotes" >> release_notes.txt
          git tag -a ${{ env.newTag }} -m "$(cat release_notes.txt)"
          git push origin ${{ env.newTag }}